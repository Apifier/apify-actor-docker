name: Release Images

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Tag for the images (e.g.: beta)'
        required: true
      apify_version:
        description: 'Apify SDK version (e.g.: ^1.0.0)'
        required: true
      puppeteer_version:
        description: 'Puppeteer version (e.g.: 5.5.0)'
        required: true
      playwright_version:
        description: 'Playwright version (e.g.: 1.7.1)'
        required: true

  repository_dispatch:
    types: [ build-images ]

env:
  RELEASE_TAG: ${{ github.event.inputs.release_tag || github.event.client_payload.release_tag }}
  APIFY_VERSION: ${{ github.event.inputs.apify_version || github.event.client_payload.apify_version }}
  PUPPETEER_VERSION: ${{ github.event.inputs.puppeteer_version || github.event.client_payload.puppeteer_version }}
  PLAYWRIGHT_VERSION: ${{ github.event.inputs.playwright_version || github.event.client_payload.playwright_version }}

jobs:
  # Build master images that are not dependent on existing builds.
  build-main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image-name: [node, node-puppeteer-chrome, node-playwright, node-playwright-chrome, node-playwright-firefox, node-playwright-webkit]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Set Dependency Versions
        run: |
          cd ${{ matrix.image-name }}
          node ../.github/scripts/set-dependency-versions.js
      -
        # It seems that it takes at least two minutes before a newly published version
        # becomes available in the NPM registry. We wait before starting the image builds.
        name: Wait For Package Registry
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 2 # timeout for a single attempt
          max_attempts: 3
          retry_wait_seconds: 60 # wait between retries
          command: cd ${{ matrix.image-name }} && npm i --dry-run
      -
        name: Build Image with puppeteer version
        id: docker_build
        uses: docker/build-push-action@v2
        if: ${{ env.RELEASE_TAG == 'test' && contains(matrix.image-name, 'puppeteer') }}
        with:
          context: ./${{ matrix.image-name }}
          file: ./${{ matrix.image-name }}/Dockerfile
          load: true
          tags: apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }},apify/actor-${{ matrix.image-name }}:${{ env.PUPPETEER_VERSION }}
      - 
        name: Build Image with playwright version
        uses: docker/build-push-action@v2
        if: ${{ env.RELEASE_TAG == 'test' && contains(matrix.image-name, 'playwright') }}
        with:
          context: ./${{ matrix.image-name }}
          file: ./${{ matrix.image-name }}/Dockerfile
          load: true
          tags: apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }},apify/actor-${{ matrix.image-name }}:${{ env.PLAYWRIGHT_VERSION }}
      - 
        name: Build Image without automation library version tag
        uses: docker/build-push-action@v2
        if: ${{ !contains(matrix.image-name, 'puppeteer') && !contains(matrix.image-name, 'playwright') || env.RELEASE_TAG != 'test'}}
        with:
          context: ./${{ matrix.image-name }}
          file: ./${{ matrix.image-name }}/Dockerfile
          load: true
          tags: apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }}
      -
        name: Test Image
        run: docker run apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }}
      -
        name: Test Image with puppeteer version tag
        if: ${{ env.RELEASE_TAG == 'test' && contains(matrix.image-name, 'puppeteer') }}
        run: docker run apify/actor-${{ matrix.image-name }}:${{ env.PUPPETEER_VERSION }}
      -
        name: Test Image with playwright version tag
        if: ${{ env.RELEASE_TAG == 'test' && contains(matrix.image-name, 'playwright') }}
        run: docker run apify/actor-${{ matrix.image-name }}:${{ env.PLAYWRIGHT_VERSION }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Push Image without automation library version tag
        run: docker push apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }}
      -
        name: Push Image with puppeteer version tag
        if: ${{ env.RELEASE_TAG == 'test' && contains(matrix.image-name, 'puppeteer') }}
        run: docker push apify/actor-${{ matrix.image-name }}:${{ env.PUPPETEER_VERSION }}
      -
        name: Push Image with playwirght version tag
        if: ${{ env.RELEASE_TAG == 'test' && contains(matrix.image-name, 'playwright') }}
        run: docker push apify/actor-${{ matrix.image-name }}:${{ env.PLAYWRIGHT_VERSION }}